# Remap prefix to Ctrl + a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Set correct term
set -g default-terminal "screen-256color"

# Force a reload of the config file
unbind r
bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

set -s escape-time 0 # Fix ESC key small dealy in Ubuntu 18.04

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

# Use Vi mode
setw -g mode-keys vi
set -g status-keys vi

# Copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"

# More straight forward key bindings for splitting
unbind-key %
bind-key h split-window -h
unbind-key '"'
bind v split-window -v

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Bad Wolf
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Custom status bar
# Powerline symbols: ÓÇ† ÓÇ° ÓÇ¢ ÓÇ∞ ÓÇ±  ÓÇ≤ ÓÇ≥
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 1
set -g status-left '#[fg=colour16,bg=colour254,bold] #F #S #[fg=colour254,bg=colour238,nobold]ÓÇ∞#[fg=colour15,bg=colour238,bold] #I.#P #[fg=colour238,bg=colour234,nobold]ÓÇ∞'

# includes Thyme config. A console pomodoro timer with Tmux integration
set -g status-right 'üçÖ  #(cat ~/.thyme-tmux) Batt: #{battery_icon} #{battery_percentage} #{battery_remain} #[fg=colour245]ÓÇ≥ #(date +"%a") %d %b %R #[fg=colour237]ÓÇ≤#[fg=colour247,bg=colour237]#(uptime | cut -d "," -f 3- | cut -d ":" -f2) ÓÇ≤#[fg=colour16,bg=colour247,bold] #(cat ~/.pomo_stat) '

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]ÓÇ∞#[fg=colour16,bg=colour39,noreverse,bold] #I ÓÇ± #W #[fg=colour39,bg=colour234,nobold]ÓÇ∞"

# Activity
setw -g monitor-activity on
set -g visual-activity on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'Morantron/tmux-fingers'

# Battery custom icons
set -g @batt_discharging_icon "<U+1F44E>"

# Use the good ol' hints format for Tmux fingers
set -g @fingers-compact-hints 0

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
